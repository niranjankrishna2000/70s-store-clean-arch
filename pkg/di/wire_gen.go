// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"main/pkg/api"
	"main/pkg/api/handler"
	"main/pkg/config"
	"main/pkg/db"
	"main/pkg/repository"
	"main/pkg/usecase"
)

// Injectors from wire.go:

func InitializeAPI(cfg config.Config) (*http.ServerHTTP, error) {
	gormDB, err := db.ConnectDatabase(cfg)
	if err != nil {
		return nil, err
	}

	categoryRepository:=repository.NewCategoryRepository(gormDB)
	categoryUseCase:=usecase.NewCategoryUseCase(categoryRepository)
	categoryHandler:=handler.NewCategoryHandler(categoryUseCase)

	inventoryRepository:=repository.NewInventoryRepository(gormDB)
	inventoryUseCase:=usecase.NewInventoryUseCase(inventoryRepository)
	inventoryHandler:=handler.NewInventoryHandler(inventoryUseCase)

	

	otpRepository:=repository.NewOtpRepository(gormDB)
	otpUseCase:=usecase.NewOtpUseCase(cfg,otpRepository)
	otpHandler:=handler.NewOtpHandler(otpUseCase)

	userRepository := repository.NewUserRepository(gormDB)
	userUseCase := usecase.NewUserUseCase(userRepository)
	userHandler := handler.NewUserHandler(userUseCase)

	cartRepository:=repository.NewCartRepository(gormDB)
	cartUseCase:=usecase.NewCartUseCase(cartRepository,inventoryRepository,userUseCase)
	cartHandler:=handler.NewCartHandler(cartUseCase)

	orderRepository:=repository.NewOrderRepository(gormDB)
	orderUseCase:=usecase.NewOrderUseCase(orderRepository,userUseCase)
	orderHandler:=handler.NewOrderHandler(orderUseCase)

	adminRepository:=repository.NewAdminRepository(gormDB)
	adminUseCase:=usecase.NewAdminUseCase(adminRepository)
	adminHandler:=handler.NewAdminHandler(adminUseCase)

	serverHTTP := http.NewServerHTTP(categoryHandler,inventoryHandler,userHandler,otpHandler,adminHandler,cartHandler,orderHandler)

	return serverHTTP, nil
}
